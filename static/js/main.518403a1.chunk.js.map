{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/Loader/Loader.tsx","components/TodoList/Thead/Thead.tsx","components/TodoList/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["currentTodoSlice","createSlice","name","initialState","currentTodo","user","loading","error","reducers","addTodo","state","action","payload","setLoading","setError","removeTodo","addUser","actions","filterSlice","query","status","changeStatus","setQuery","clearQuery","todosSlice","todos","setTodos","store","configureStore","reducer","currentTodoReducer","filter","filterReducer","todosReducer","useAppSelector","useDispatch","useSelector","Loader","className","Thead","memo","TodoItem","todo","id","title","completed","dispatch","isSelected","useMemo","selectTodo","useCallback","classNames","type","onClick","TodoList","useState","visibleTodos","setVisibleTodos","isEmpty","length","useEffect","filtredTodos","toLowerCase","includes","map","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoFilter","queryValue","setQueryValue","filterTodo","event","target","value","clearInput","debounceUpdate","debounce","onSubmit","preventDefault","onChange","placeholder","newQuery","style","pointerEvents","TodoModal","closeTodo","userId","loadingUser","todosFromServer","catch","userLoadError","finally","href","email","App","loadingTodos","todosLoadError","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.518403a1.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\ntype TodoState = {\n  currentTodo: Todo | null;\n  user: User | null,\n  loading: boolean;\n  error: string;\n};\n\nconst initialState: TodoState = {\n  currentTodo: null,\n  user: null,\n  loading: false,\n  error: '',\n};\n\nconst currentTodoSlice = createSlice({\n  name: 'currentTodo',\n  initialState,\n  reducers: {\n    addTodo: (state, action: PayloadAction<Todo>) => {\n      state.currentTodo = action.payload;\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n    removeTodo: (state) => {\n      state.currentTodo = null;\n      state.user = null;\n      state.error = '';\n    },\n    addUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload;\n    },\n  },\n});\n\nexport default currentTodoSlice.reducer;\nexport const {\n  addTodo, removeTodo, addUser, setLoading, setError,\n} = currentTodoSlice.actions;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Status } from '../types/Status';\n\ntype Query = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: Query = {\n  query: '',\n  status: 'all',\n};\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    changeStatus: (state, action: PayloadAction<Status>) => {\n      state.status = action.payload;\n    },\n    setQuery: (state, action: PayloadAction<string>) => {\n      state.query = action.payload;\n    },\n    clearQuery: (state) => {\n      state.query = '';\n    },\n  },\n});\n\nexport default filterSlice.reducer;\nexport const {\n  changeStatus, setQuery, clearQuery,\n} = filterSlice.actions;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Todo } from '../types/Todo';\n\ntype TodosState = {\n  todos: Todo[];\n  loading: boolean;\n  error: string;\n};\n\nconst initialState: TodosState = {\n  todos: [],\n  loading: false,\n  error: '',\n};\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload;\n    },\n    setTodos: (state, action: PayloadAction<Todo[]>) => {\n      state.todos = action.payload;\n    },\n  },\n});\n\nexport default todosSlice.reducer;\nexport const {\n  setTodos, setLoading, setError,\n} = todosSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = configureStore({\n  reducer: {\n    currentTodo: currentTodoReducer,\n    filter: filterReducer,\n    todos: todosReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, memo } from 'react';\n\nexport const Thead: FC = memo(() => {\n  return (\n    <thead>\n      <tr>\n        <th>#</th>\n\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n  );\n});\n","import classNames from 'classnames';\nimport {\n  FC, memo, useCallback, useMemo,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../../app/hooks';\nimport { addTodo } from '../../../features/currentTodo';\nimport { Todo } from '../../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: FC<Props> = memo(({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useDispatch();\n  const { currentTodo } = useAppSelector(state => state.currentTodo);\n  const isSelected = useMemo(() => currentTodo?.id === id, [currentTodo]);\n\n  const selectTodo = useCallback(() => {\n    dispatch(addTodo(todo));\n  }, []);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames(\n        { 'has-background-info-light': isSelected },\n      )}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames(\n          {\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          },\n        )}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={selectTodo}\n        >\n          <span className=\"icon\">\n            {isSelected\n              ? <i className=\"far fa-eye-slash\" />\n              : <i className=\"far fa-eye\" />}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n});\n","import {\n  FC, useEffect, useMemo, useState,\n} from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { Thead } from './Thead';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList: FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const { todos } = useAppSelector(state => state.todos);\n  const isEmpty = useMemo(() => visibleTodos.length === 0, [visibleTodos]);\n  const { status, query } = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    const filtredTodos = todos\n      .filter(todo => {\n        switch (status) {\n          case 'active':\n            return !todo.completed;\n\n          case 'completed':\n            return todo.completed;\n\n          default:\n            return true;\n        }\n      })\n      .filter(todo => (\n        todo.title\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      ));\n\n    setVisibleTodos(filtredTodos);\n  }, [todos, status, query]);\n\n  return (\n    <>\n      {isEmpty && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!isEmpty && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <Thead />\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <TodoItem todo={todo} key={todo.id} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  FC, memo, useCallback, useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport { useAppSelector } from '../../app/hooks';\nimport { changeStatus, clearQuery, setQuery } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: FC = memo(() => {\n  const dispatch = useDispatch();\n  const { query } = useAppSelector(state => state.filter);\n  const [queryValue, setQueryValue] = useState(query);\n\n  const filterTodo = useCallback((\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    dispatch(changeStatus(event.target.value as Status));\n  }, []);\n\n  const clearInput = useCallback(() => {\n    setQueryValue('');\n    dispatch(clearQuery());\n  }, []);\n\n  const debounceUpdate = useCallback(\n    debounce((value) => dispatch(setQuery(value)), 1000), [],\n  );\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    setQueryValue(newQuery);\n\n    debounceUpdate(newQuery);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={filterTodo}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryValue}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"clear search\"\n            onClick={clearInput}\n          />\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  addUser,\n  removeTodo, setError as userLoadError, setLoading as loadingUser,\n} from '../../features/currentTodo';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    currentTodo, loading, user, error,\n  } = useAppSelector(state => state.currentTodo);\n  const closeTodo = () => {\n    dispatch(removeTodo());\n  };\n\n  useEffect(() => {\n    dispatch(loadingUser(true));\n\n    if (currentTodo) {\n      getUser(currentTodo?.userId)\n        .then(todosFromServer => {\n          dispatch(addUser(todosFromServer));\n        })\n        .catch(() => dispatch(userLoadError('Something went wrong')))\n        .finally(() => dispatch(loadingUser(false)));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && <Loader />}\n\n      {error && (\n        <div className=\"modal is-active is-clipped\">\n          <div className=\"modal-background\" />\n          <div className=\"modal-content\">\n            {error}\n          </div>\n          <button\n            type=\"button\"\n            className=\"modal-close is-large\"\n            aria-label=\"close\"\n            onClick={closeTodo}\n          />\n        </div>\n      )}\n\n      {!loading && user && currentTodo && !error && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodo}\n              aria-label=\"close modal\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block\"\n              data-cy=\"modal-title\"\n            >\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from './app/hooks';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Loader } from './components/Loader';\nimport { TodoList } from './components/TodoList';\nimport { getTodos } from './api';\nimport {\n  setTodos,\n  setLoading as loadingTodos,\n  setError as todosLoadError,\n} from './features/todos';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const { todos, loading, error } = useAppSelector(state => state.todos);\n  const { currentTodo } = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    dispatch(loadingTodos(true));\n    getTodos()\n      .then(todosFromServer => {\n        dispatch(setTodos(todosFromServer));\n      })\n      .catch(() => dispatch(todosLoadError('Something went wrong')))\n      .finally(() => dispatch(loadingTodos(false)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {error && (<p>{error}</p>)}\n\n              {!loading && todos && !error && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}